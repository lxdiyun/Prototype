!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	Development	//
NetworkService	NetworkService.m	/^@implementation NetworkService$/;"	I	interface:
NetworkService	NetworkService.m	/^@interface NetworkService () <NSStreamDelegate>$/;"	i	interface:
addMessageHanlder:withTarget:withMessageID:	NetworkService.m	/^- (void)addMessageHanlder:(SEL)handler withTarget:(id)targer withMessageID:(uint32_t)ID;$/;"	m	interface:NetworkService
addMessageHanlder:withTarget:withMessageID:	NetworkService.m	/^- (void)addMessageHanlder:(SEL)handler withTarget:(id)target withMessageID:(uint32_t)ID$/;"	m	implementation:NetworkService
allocWithZone:	NetworkService.m	/^+ (id)allocWithZone:(NSZone *)zone $/;"	c	implementation:NetworkService
autorelease	NetworkService.m	/^- (id)autorelease $/;"	m	implementation:NetworkService
closeStream	NetworkService.m	/^- (void)closeStream$/;"	m	implementation:NetworkService
closeStream	NetworkService.m	/^- (void)closeStream;$/;"	m	interface:NetworkService
connect	NetworkService.m	/^#pragma mark - private connection method$/;"	m	implementation:NetworkService
connect	NetworkService.m	/^- (void)connect;$/;"	m	interface:NetworkService
copyWithZone:	NetworkService.m	/^- (id)copyWithZone:(NSZone *)zone $/;"	m	implementation:NetworkService
dealloc	NetworkService.m	/^- (void)dealloc $/;"	m	implementation:NetworkService
getInstance	NetworkService.m	/^+ (NetworkService*)getInstance $/;"	c	implementation:NetworkService
handleMessage:	NetworkService.m	/^- (void)handleMessage:(NSData *)bufferData$/;"	m	implementation:NetworkService
handleMessage:	NetworkService.m	/^- (void)handleMessage:(NSData *)bufferData;$/;"	m	interface:NetworkService
handlerDict	NetworkService.m	/^	NSMutableDictionary *_handlerDict;$/;"	F	interface:NetworkService
handlerDict	NetworkService.m	/^@property (retain) NSMutableDictionary *handlerDict;$/;"	p	interface:NetworkService
initialize	NetworkService.m	/^+ (void)initialize {$/;"	c	implementation:NetworkService
inputStream	NetworkService.m	/^	NSInputStream *_inputStream;$/;"	F	interface:NetworkService
inputStream	NetworkService.m	/^@property (retain) NSInputStream *inputStream;$/;"	p	interface:NetworkService
isWriting	NetworkService.m	/^	BOOL _isWriting;$/;"	F	interface:NetworkService
isWriting	NetworkService.m	/^@property (assign) BOOL isWriting;$/;"	p	interface:NetworkService
nil	NetworkService.m	/^#pragma mark -$/;"	m	implementation:NetworkService
outputStream	NetworkService.m	/^	NSOutputStream *_outputStream;$/;"	F	interface:NetworkService
outputStream	NetworkService.m	/^@property (retain) NSOutputStream *outputStream;$/;"	p	interface:NetworkService
readMessage	NetworkService.m	/^#pragma mark - read methods$/;"	m	implementation:NetworkService
readMessage	NetworkService.m	/^- (void)readMessage;$/;"	m	interface:NetworkService
release	NetworkService.m	/^- (oneway void)release $/;"	m	implementation:NetworkService
requestLogin	NetworkService.m	/^#pragma mark - login message$/;"	m	implementation:NetworkService
requestLogin	NetworkService.m	/^- (void)requestLogin;$/;"	m	interface:NetworkService
requestSendMessage:	NetworkService.m	/^#pragma mark - write methods$/;"	m	implementation:NetworkService
requestSendMessage:	NetworkService.m	/^- (void)requestSendMessage:(NSData *)message;$/;"	m	interface:NetworkService
requestsendAndHandleMessage:withTarget:withHandler:withMessageID:	NetworkService.m	/^- (void)requestsendAndHandleMessage:(NSData*)message $/;"	m	implementation:NetworkService
retain	NetworkService.m	/^- (id)retain $/;"	m	implementation:NetworkService
retainCount	NetworkService.m	/^- (unsigned)retainCount$/;"	m	implementation:NetworkService
setup	NetworkService.m	/^#pragma mark -$/;"	m	implementation:NetworkService
setup	NetworkService.m	/^- (void)setup;$/;"	m	interface:NetworkService
stream:handleEvent:	NetworkService.m	/^#pragma mark - NSstream delegate$/;"	m	implementation:NetworkService
writeArray	NetworkService.m	/^@property (retain) NSMutableArray *writeArray;$/;"	p	interface:NetworkService
writeMessage	NetworkService.m	/^- (void)writeMessage$/;"	m	implementation:NetworkService
writeMessage	NetworkService.m	/^- (void)writeMessage;$/;"	m	interface:NetworkService
wrtieArray	NetworkService.m	/^	NSMutableArray *_wrtieArray;$/;"	F	interface:NetworkService
